#!/bin/bash
#
# lsskill - list all vocabulary, intent &dialog files for one skill 
#
#+--------------------------------------------------------------------------+
function usage()
# Give help to the user
#+--------------------------------------------------------------------------+
 {
  : SOURCE: ${BASH_SOURCE}
  : STACK:  ${FUNCNAME[@]}

  echo                                     # leave some room
  echo "Name: lsskill - List all vocabulary, intent, dialog, etc. files for one Mycroft skill"
  echo "Usage: lsskill [OPTIONS] PATH"
  echo "Where: PATH is the directory with the files  ex: /opt/mycroft/skills/ice-cream-shop-skill/locale/en-us"  
  echo ""
  echo "OPTIONS:"
  echo "  -h|--help         Give help (this screen)"
  echo "  -l|--long         Add additional information"
  echo "  -x|--debug        Print commands and arguments as they are executed"
  exit 51
 }                                         # usage()

#+--------------------------------------------------------------------------+
function parseArgs()
# Parse arguments
# Args: All arguments passed into script
#+--------------------------------------------------------------------------+
 {
  : SOURCE: ${BASH_SOURCE}
  : STACK:  ${FUNCNAME[@]}

  while [ -n "$1" ]                        # loop through args passed in
  do
    case "$1" in
      -h|--help)
        usage
        ;;
      -l|--long)
         outputType=long 
         ;;
      -x|--debug)                          # turn trace on
         set -vx
         ;;
      *)
	if [ ${#path} != 0 ]; then         # PATTERN already passed
	  echo "ERROR: Too many arguments: $1"
	  exit 4 
        else
          path=$1
	fi   
        ;;
    esac
    shift
  done
  if [ ${#path} = 0 ]; then                # required arg not passed
    echo "ERROR!!!: PATH not passed in"
    usage                                  # give help
  fi  
 }                                         # parseArgs()

#+--------------------------------------------------------------------------+
function listSkill()
# List one skills in a short or long format 
# Args: 
#+--------------------------------------------------------------------------+
 {
  : SOURCE: ${BASH_SOURCE}
  : STACK:  ${FUNCNAME[@]}

  if [ ! -d $path ]; then 
    echo "ERROR: $path does not appear to be a directory"
    exit 4                                 # cannot perform operation
  fi

  cd $path                                 # change to directory with files
  echo "All files in $path:"
  echo 
  local nextFile                        
  for nextFile in *; do
    echo "File: $nextFile"
    cat $nextFile                          # show contents of file
    echo "-----------------------------"   # separator 
  done  
  if [ "$outputType" = long ]; then        # give more output
    echo " "
    echo "Directory (most recent files at bottom)"
    /bin/ls -latr                          # long listing sorted by reverse time
  fi  
 }                                         # listSkills()

#+--------------------------------------------------------------------------+
# Global variables"
outputType="short"                          # short or long listing 
path=""                                     # directory with skill files 

# main()
parseArgs $@                                # parse arguments
listSkill                                   # list the skill

